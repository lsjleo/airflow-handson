# FROM debian:stable as jupyterhub-builder
FROM python:3.12 AS jupyterhub-builder

ARG WDIR=/home/jupyter


COPY requirements.txt /requirements.txt
COPY ./jupyter $WDIR
COPY ./jupyter/magic/snowpark.py /usr/local/lib/python3.8/site-packages/snowpark.py
COPY ./jupyter/templates/*.ipynb /usr/local/lib/python3.8/site-packages/jupyterlab_templates/templates/jupyterlab_templates/
COPY ./credentials.json /home/admin/

RUN mkdir /root/.aws
COPY config /root/.aws/config
COPY credentials /root/.aws/credentials

WORKDIR $WDIR
RUN mkdir -p ${WDIR}/templates

RUN apt-get update \
    && apt-get install -y libpq-dev jq freetds-dev curl python3 python3-pip gcc g++ make wget apt-utils r-base r-base-dev libcap2-bin \
    && curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | gpg --dearmor | tee /usr/share/keyrings/yarnkey.gpg >/dev/null \
    && echo "deb [signed-by=/usr/share/keyrings/yarnkey.gpg] https://dl.yarnpkg.com/debian stable main" | tee /etc/apt/sources.list.d/yarn.list \
    && apt-get update && apt-get install -y yarn


RUN pip3 install --upgrade pip \
    && curl -sL https://deb.nodesource.com/setup_18.x | bash \
    && apt-get install -y nodejs python3-dev git libzmq3-dev libcurl4-openssl-dev libssl-dev \
    && npm install -g npm \
    && npm install -g configurable-http-proxy 

RUN apt-get update && \
    apt-get install -y openssl 

RUN pip3 install --no-cache-dir apache-airflow

ARG USERNAME=admin
ARG USER_UID=1000
ARG USER_GID=$USER_UID
ARG USER_PASSWD=admin@

RUN echo "RUNNING ADMIN WITH PW ${USER_PASSWD}" 


RUN groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID -ms /bin/bash $USERNAME -p $(perl -e 'print crypt($ARGV[0], "password")' $USER_PASSWD) --system \
    && apt-get update \
    && apt-get install -y sudo tar \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME

# ANALYTICS AND AI TOOLS
RUN pip3 install pandas numpy flask
RUN pip3 install jupyterlab 
    # jupyterlab_templates 
    # jupyter-resource-usage 
    # ipywidgets==7.7.2 openai jupyter_ai pandas_profiling \
    # diagrams flask GitPython 

# R LANGUAGE ENABLE 
# RUN R -e "install.packages('IRkernel')" \
#     && R -e "IRkernel::installspec(user = FALSE)" \
#     && jupyter lab build

# JAVASCRIPT NOTEBOOKS ENABLE
# RUN curl -fsSL https://deno.land/install.sh | sh \
#     && deno jupyter --unstable --install

RUN mkdir ${WDIR}/notebooks && cd ${WDIR}/notebooks
CMD ["jupyter", "lab", "--ip", "0.0.0.0", "--port", "9000", "--allow-root", "--no-browser", "--core-mode", "--ServerApp.password", ""]
EXPOSE 9000